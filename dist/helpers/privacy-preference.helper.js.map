{"version":3,"sources":["../../src/helpers/privacy-preference.helper.js"],"names":["evaluate","user","appId","_id","appAttributes","attributes","appPurposes","purposes","appTimeofRetention","timeofRetention","Error","privacyPreference","Promise","all","evaluateAttributes","evaluatePurposes","evaluateTimeofRetention","isAcceptedAttrs","isAcceptedPurposes","isTimeofRetention","console","log","evaluateAttributeType","isAllowed","isExcepted","isDeny","chalk","blue","JSON","stringify","green","exceptions","type","uppAttributes","i","length","appAttributeId","Models","App","aggregate","$match","mongoose","Types","ObjectId","$unwind","appAttribute","findOne","$elemMatch","$in","left","$lte","right","$gte","result","evaluatePurposesType","allowedPurposes","prohibitedPurposes","denyPurposes","uppAppPurposes","appPurposeId","appPurpose"],"mappings":"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","sourcesContent":["import Models from \"../models\";\nimport mongoose from \"mongoose\";\nimport chalk from \"chalk\";\nconst evaluate = async (\n  {\n    _id: appId,\n    attributes: appAttributes,\n    purposes: appPurposes,\n    timeofRetention: appTimeofRetention,\n  },\n  user\n) => {\n  if (!user) throw new Error(\"user not exist\");\n  const { privacyPreference } = user;\n\n  const [\n    isAcceptedAttrs,\n    isAcceptedPurposes,\n    isTimeofRetention,\n  ] = await Promise.all([\n    // check attributes\n    evaluateAttributes(appId, appAttributes, privacyPreference),\n    // check attributes\n    evaluatePurposes(appId, appPurposes, privacyPreference),\n    // check timeofRetention\n    evaluateTimeofRetention(appTimeofRetention, privacyPreference),\n  ]);\n\n  return isAcceptedAttrs && isAcceptedPurposes && isTimeofRetention;\n};\n\n// evaluate timeofRetention between app and upp\nconst evaluateTimeofRetention = (appTimeofRetention, privacyPreference) => {\n  console.log(appTimeofRetention, privacyPreference.timeofRetention);\n  return appTimeofRetention <= privacyPreference.timeofRetention;\n};\n\n// evaluate attributes between app and upp\nconst evaluateAttributes = async (appId, appAttributes, privacyPreference) => {\n  const [isAllowed, isExcepted, isDeny] = await Promise.all([\n    evaluateAttributeType(appId, appAttributes, privacyPreference, \"allow\"),\n    evaluateAttributeType(appId, appAttributes, privacyPreference, \"except\"),\n    evaluateAttributeType(appId, appAttributes, privacyPreference, \"deny\"),\n  ]);\n\n  console.log(\n    chalk.blue(\n      `ATTRIBUTE - allow: APP: ${JSON.stringify(appAttributes)} - UPP ${\n        privacyPreference.attributes\n      } is ${chalk.green(isAllowed)}`\n    )\n  );\n\n  console.log(\n    chalk.blue(\n      `ATTRIBUTE - except: APP: ${JSON.stringify(appAttributes)} - UPP ${\n        privacyPreference.exceptions\n      } is ${chalk.green(!isExcepted)}`\n    )\n  );\n\n  console.log(\n    chalk.blue(\n      `ATTRIBUTE - deny: APP: ${JSON.stringify(appAttributes)} - UPP ${\n        privacyPreference.exceptions\n      } is ${chalk.green(!isDeny)}`\n    )\n  );\n\n  return isAllowed && !isExcepted && !isDeny;\n};\n\n// evaluate attributes by type\nconst evaluateAttributeType = async (\n  appId,\n  appAttributes,\n  privacyPreference,\n  type\n) => {\n  let uppAttributes;\n\n  switch (true) {\n    case type === \"allow\": {\n      uppAttributes = privacyPreference.attributes;\n      break;\n    }\n    case type === \"except\": {\n      uppAttributes = privacyPreference.exceptions;\n      break;\n    }\n    case type === \"deny\": {\n      uppAttributes = privacyPreference.exceptions;\n      break;\n    }\n    default: {\n      throw new Error(\"type is invalid\");\n    }\n  }\n\n  for (let i = 0; i < appAttributes.length; i++) {\n    const appAttributeId = appAttributes[i];\n    let appAttribute = await Models.App.aggregate([\n      { $match: { _id: mongoose.Types.ObjectId(appId) } },\n      { $unwind: \"$attributes\" },\n      { $match: { \"attributes._id\": mongoose.Types.ObjectId(appAttributeId) } },\n    ]);\n\n    if (!appAttribute[0] || !appAttribute[0].attributes)\n      throw new Error(`Attribute ${appAttributeId} not found`);\n    // get attribute\n    appAttribute = appAttribute[0].attributes;\n\n    const result = await Models.App.findOne({\n      _id: appId,\n      attributes: {\n        $elemMatch: {\n          _id: { $in: uppAttributes },\n          left: { $lte: appAttribute.left },\n          right: { $gte: appAttribute.right },\n        },\n      },\n    });\n\n    if (result) return true;\n  }\n  return false;\n};\n\n// evaluate attributes between app and upp\nconst evaluatePurposes = async (appId, appPurposes, privacyPreference) => {\n  const [isAllowed, isExcepted, isDeny] = await Promise.all([\n    evaluatePurposesType(appId, appPurposes, privacyPreference, \"allow\"),\n    evaluatePurposesType(appId, appPurposes, privacyPreference, \"except\"),\n    evaluatePurposesType(appId, appPurposes, privacyPreference, \"deny\"),\n  ]);\n\n  console.log(\n    chalk.blue(\n      `PURPOSE - allow: APP: ${JSON.stringify(appPurposes)} - UPP ${\n        privacyPreference.allowedPurposes\n      } is ${chalk.green(isAllowed)}`\n    )\n  );\n\n  console.log(\n    chalk.blue(\n      `PURPOSE - except: APP: ${JSON.stringify(appPurposes)} - UPP ${\n        privacyPreference.prohibitedPurposes\n      } is ${chalk.green(!isExcepted)}`\n    )\n  );\n\n  console.log(\n    chalk.blue(\n      `PURPOSE - deny: APP: ${JSON.stringify(appPurposes)} - UPP ${\n        privacyPreference.denyPurposes\n      } is ${chalk.green(!isDeny)}`\n    )\n  );\n\n  return isAllowed && !isExcepted && !isDeny;\n};\n\n// evaluate attributes by type\nconst evaluatePurposesType = async (\n  appId,\n  appPurposes,\n  privacyPreference,\n  type\n) => {\n  let uppAppPurposes;\n\n  switch (true) {\n    case type === \"allow\": {\n      uppAppPurposes = privacyPreference.allowedPurposes;\n      break;\n    }\n    case type === \"except\": {\n      uppAppPurposes = privacyPreference.prohibitedPurposes;\n      break;\n    }\n    case type === \"deny\": {\n      uppAppPurposes = privacyPreference.denyPurposes;\n      break;\n    }\n    default: {\n      throw new Error(\"type is invalid\");\n    }\n  }\n\n  for (let i = 0; i < appPurposes.length; i++) {\n    const appPurposeId = appPurposes[i];\n    let appPurpose = await Models.App.aggregate([\n      { $match: { _id: mongoose.Types.ObjectId(appId) } },\n      { $unwind: \"$purposes\" },\n      { $match: { \"purposes._id\": mongoose.Types.ObjectId(appPurposeId) } },\n    ]);\n\n    if (!appPurpose[0] || !appPurpose[0].purposes)\n      throw new Error(`Purpose ${appPurposeId} not found`);\n    // get purpose\n    appPurpose = appPurpose[0].purposes;\n\n    const result = await Models.App.findOne({\n      _id: appId,\n      purposes: {\n        $elemMatch: {\n          _id: { $in: uppAppPurposes },\n          left: { $lte: appPurpose.left },\n          right: { $gte: appPurpose.right },\n        },\n      },\n    });\n\n    if (result) return true;\n  }\n\n  return false;\n};\nexport default {\n  evaluate,\n};\n"],"file":"privacy-preference.helper.js"}