{"version":3,"sources":["../../src/helpers/privacy-preference.helper.js"],"names":["evaluate","user","appId","_id","appAttributes","attributes","appPurposes","purposes","appTimeofRetention","timeofRetention","Error","privacyPreference","Promise","all","evaluateAttributes","evaluatePurposes","evaluateTimeofRetention","isAcceptedAttrs","isAcceptedPurposes","isTimeofRetention","evaluateAttributeType","isAllowed","isExcepted","isDeny","console","log","chalk","green","red","blue","JSON","stringify","exceptions","type","uppAttributes","i","length","appAttributeId","Models","PrivacyPolicy","aggregate","$unwind","$match","mongoose","Types","ObjectId","id","appAttribute","findOne","$elemMatch","$in","left","$lte","right","$gte","result","error","message","evaluatePurposesType","allowedPurposes","prohibitedPurposes","denyPurposes","uppAppPurposes","appPurposeId","appPurpose"],"mappings":"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","sourcesContent":["import Models from \"../models\";\nimport mongoose from \"mongoose\";\nimport chalk from \"chalk\";\nconst evaluate = async (\n  {\n    _id: appId,\n    attributes: appAttributes,\n    purposes: appPurposes,\n    timeofRetention: appTimeofRetention,\n  },\n  user\n) => {\n  if (!user) throw new Error(\"user not exist\");\n  const { privacyPreference } = user;\n\n  const [\n    isAcceptedAttrs,\n    isAcceptedPurposes,\n    isTimeofRetention,\n  ] = await Promise.all([\n    // check attributes\n    evaluateAttributes(appId, appAttributes, privacyPreference),\n    // check attributes\n    evaluatePurposes(appId, appPurposes, privacyPreference),\n    // check timeofRetention\n    evaluateTimeofRetention(appTimeofRetention, privacyPreference),\n  ]);\n\n  return isAcceptedAttrs && isAcceptedPurposes && isTimeofRetention;\n};\n\n// evaluate timeofRetention between app and upp\nconst evaluateTimeofRetention = (appTimeofRetention = 0, privacyPreference) => {\n  return appTimeofRetention <= privacyPreference.timeofRetention;\n};\n\n// evaluate attributes between app and upp\nconst evaluateAttributes = async (appId, appAttributes, privacyPreference) => {\n  const [isAllowed, isExcepted, isDeny] = await Promise.all([\n    evaluateAttributeType(appId, appAttributes, privacyPreference, \"allow\"),\n    evaluateAttributeType(appId, appAttributes, privacyPreference, \"except\"),\n    evaluateAttributeType(appId, appAttributes, privacyPreference, \"deny\"),\n  ]);\n\n  console.log(\n    isAllowed ? chalk.green(\"✅\") : chalk.red(\"✖\"),\n    chalk.blue(\n      `ATTRIBUTE - allow: APP: ${JSON.stringify(\n        appAttributes\n      )} - UPP ${JSON.stringify(privacyPreference.attributes)}`\n    )\n  );\n\n  console.log(\n    !isExcepted ? chalk.green(\"✅\") : chalk.red(\"✖\"),\n    chalk.blue(\n      `ATTRIBUTE - except: APP: ${JSON.stringify(\n        appAttributes\n      )} - UPP ${JSON.stringify(privacyPreference.exceptions)}`\n    )\n  );\n\n  console.log(\n    !isDeny ? chalk.green(\"✅\") : chalk.red(\"✖\"),\n    chalk.blue(\n      `ATTRIBUTE - deny: APP: ${JSON.stringify(\n        appAttributes\n      )} - UPP ${JSON.stringify(privacyPreference.exceptions)}`\n    )\n  );\n\n  return isAllowed && !isExcepted && !isDeny;\n};\n\n// evaluate attributes by type\nconst evaluateAttributeType = async (\n  appId,\n  appAttributes,\n  privacyPreference,\n  type\n) => {\n  try {\n    let uppAttributes;\n\n    switch (true) {\n      case type === \"allow\": {\n        uppAttributes = privacyPreference.attributes;\n        break;\n      }\n      case type === \"except\": {\n        uppAttributes = privacyPreference.exceptions;\n        break;\n      }\n      case type === \"deny\": {\n        uppAttributes = privacyPreference.exceptions;\n        break;\n      }\n      default: {\n        throw new Error(\"type is invalid\");\n      }\n    }\n\n    for (let i = 0; i < appAttributes.length; i++) {\n      const appAttributeId = appAttributes[i];\n      let appAttribute = await Models.PrivacyPolicy.aggregate([\n        { $unwind: \"$attributes\" },\n        {\n          $match: {\n            \"attributes._id\": mongoose.Types.ObjectId(appAttributeId.id),\n          },\n        },\n      ]);\n\n      if (!appAttribute[0] || !appAttribute[0].attributes)\n        throw new Error(`Attribute ${appAttributeId} not found`);\n      // get attribute\n      appAttribute = appAttribute[0].attributes;\n\n      const result = await Models.PrivacyPolicy.findOne({\n        attributes: {\n          $elemMatch: {\n            _id: { $in: uppAttributes },\n            left: { $lte: appAttribute.left },\n            right: { $gte: appAttribute.right },\n          },\n        },\n      });\n      if (result) return true;\n    }\n    return false;\n  } catch (err) {\n    chalk.red(console.error(\"evaluateAttributeType: \" + err.message));\n    throw err;\n  }\n};\n\n// evaluate attributes between app and upp\nconst evaluatePurposes = async (appId, appPurposes, privacyPreference) => {\n  const [isAllowed, isExcepted, isDeny] = await Promise.all([\n    evaluatePurposesType(appId, appPurposes, privacyPreference, \"allow\"),\n    evaluatePurposesType(appId, appPurposes, privacyPreference, \"except\"),\n    evaluatePurposesType(appId, appPurposes, privacyPreference, \"deny\"),\n  ]);\n\n  console.log(\n    isAllowed ? chalk.green(\"✅\") : chalk.red(\"✖\"),\n    chalk.blue(\n      `PURPOSE - allow: APP: ${JSON.stringify(\n        appPurposes\n      )} - UPP ${JSON.stringify(privacyPreference.allowedPurposes)}`\n    )\n  );\n\n  console.log(\n    !isExcepted ? chalk.green(\"✅\") : chalk.red(\"✖\"),\n    chalk.blue(\n      `PURPOSE - except: APP: ${JSON.stringify(\n        appPurposes\n      )} - UPP ${JSON.stringify(privacyPreference.prohibitedPurposes)}`\n    )\n  );\n\n  console.log(\n    !isDeny ? chalk.green(\"✅\") : chalk.red(\"✖\"),\n    chalk.blue(\n      `PURPOSE - deny: APP: ${JSON.stringify(\n        appPurposes\n      )} - UPP ${JSON.stringify(privacyPreference.denyPurposes)}`\n    )\n  );\n\n  return isAllowed && !isExcepted && !isDeny;\n};\n\n// evaluate attributes by type\nconst evaluatePurposesType = async (\n  appId,\n  appPurposes,\n  privacyPreference,\n  type\n) => {\n  let uppAppPurposes;\n\n  switch (true) {\n    case type === \"allow\": {\n      uppAppPurposes = privacyPreference.allowedPurposes;\n      break;\n    }\n    case type === \"except\": {\n      uppAppPurposes = privacyPreference.prohibitedPurposes;\n      break;\n    }\n    case type === \"deny\": {\n      uppAppPurposes = privacyPreference.denyPurposes;\n      break;\n    }\n    default: {\n      throw new Error(\"type is invalid\");\n    }\n  }\n\n  for (let i = 0; i < appPurposes.length; i++) {\n    const appPurposeId = appPurposes[i];\n    let appPurpose = await Models.PrivacyPolicy.aggregate([\n      { $unwind: \"$purposes\" },\n      { $match: { \"purposes._id\": mongoose.Types.ObjectId(appPurposeId.id) } },\n    ]);\n\n    if (!appPurpose[0] || !appPurpose[0].purposes)\n      throw new Error(`Purpose ${appPurposeId} not found`);\n    // get purpose\n    appPurpose = appPurpose[0].purposes;\n\n    const result = await Models.PrivacyPolicy.findOne({\n      purposes: {\n        $elemMatch: {\n          _id: { $in: uppAppPurposes },\n          left: { $lte: appPurpose.left },\n          right: { $gte: appPurpose.right },\n        },\n      },\n    });\n\n    if (result) return true;\n  }\n\n  return false;\n};\nexport default {\n  evaluate,\n};\n"],"file":"privacy-preference.helper.js"}